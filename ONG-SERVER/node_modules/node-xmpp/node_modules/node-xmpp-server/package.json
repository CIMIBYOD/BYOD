{
  "name": "node-xmpp-server",
  "version": "1.0.0-alpha12",
  "description": "nodejs-based server",
  "main": "index.js",
  "scripts": {
    "test": "grunt test"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:node-xmpp/node-xmpp-server.git"
  },
  "keywords": [
    "xmpp",
    "nodejs",
    "server"
  ],
  "author": {
    "name": "Lloyd Watkin",
    "email": "lloyd@evilprofessor.co.uk"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/node-xmpp/node-xmpp-server/issues"
  },
  "dependencies": {
    "hat": "~0.0.3",
    "node-xmpp-core": "^1.0.0-alpha14",
    "debug": "~2.1.2",
    "ws": "~0.7.1"
  },
  "devDependencies": {
    "coveralls": "^2.11.2",
    "grunt-cli": "^0.1.13",
    "grunt": "~0.4.5",
    "grunt-contrib-jshint": "0.11.0",
    "grunt-mocha-cli": "~1.12.0",
    "grunt-mocha-istanbul": "^2.3.1",
    "mocha": "^2.1.0",
    "node-xmpp-client": "~1.0.0-alpha20",
    "node-xmpp-component": "~1.0.0-alpha1",
    "pem": "~1.7.1",
    "should": "~5.1.0"
  },
  "gitHead": "d2741a0658725b2ee824868750782b003783e579",
  "readme": "# node-xmpp-server\r\n\r\nIdiomatic XMPP server library for [node.js](http://nodejs.org/)\r\n\r\n[![build status](https://secure.travis-ci.org/node-xmpp/node-xmpp-server.svg?branch=master)](http://travis-ci.org/node-xmpp/node-xmpp-server)\r\n[![Coverage Status](https://img.shields.io/coveralls/node-xmpp/node-xmpp-server.svg)](https://coveralls.io/r/node-xmpp/node-xmpp-server)\r\n\r\n\r\n## Manual\r\n\r\nPlease see http://node-xmpp.org/doc/server.html for instructions on how to use `node-xmpp-server`.\r\n\r\n## Installation\r\n\r\n__Note:__ We now only support nodejs versions 0.8.0 and greater.\r\n\r\nWith package manager [npm](http://npmjs.org/):\r\n\r\n    npm install node-xmpp-server\r\n\r\n### Testing\r\n\r\nInstall the dev dependencies, then...\r\n\r\n```npm test```\r\n\r\nTo run the tests and the code style checks then use:\r\n\r\n```grunt test```\r\n\r\nAlso see the tests run in [travis](http://travis-ci.org/node-xmpp/node-xmpp-server). The tests in travis run both the code and code style tests.\r\n\r\n## How to use\r\n\r\nPlease see the various [examples](https://github.com/node-xmpp/node-xmpp-server/tree/master/examples).\r\n\r\n## Objectives of *node-xmpp-server:*\r\n\r\n* Use node.js conventions, especially `EventEmitter`, ie. for write\r\n  buffer control\r\n* Fast parsing, `node-expat` was written for this library\r\n* Optional server infrastructure with `Router`\r\n* After authentication, leave trivial protocol bits to the user, that\r\n  is XML handling according to any\r\n  [XEP](http://xmpp.org/xmpp-protocols/xmpp-extensions/)\r\n\r\n\r\n## Features\r\n\r\n* Client authentication with SASL DIGEST-MD5, PLAIN, ANONYMOUS, X-FACEBOOK-PLATFORM\r\n* `_xmpp-client._tcp` SRV record support\r\n* Simple JID parsing with Stringprep normalization\r\n  * Optional now, you won't need ICU for just node-xmpp\r\n  * Please be aware if you identify users by JIDs\r\n  * `npm install node-stringprep`\r\n* Uses [ltx](http://github.com/node-xmpp/ltx)\r\n  * Much easier to handle than a standard DOM\r\n  * xmlns-aware\r\n  * Easy XML builder like Strophe.js (see down)\r\n  * Non-buffering serialization\r\n  * Was split out of node-xmpp for modularization and resuability\r\n* [Component](http://xmpp.org/extensions/xep-0114.html) connections\r\n* Run your own server/talk to other servers with `xmpp.Router`\r\n* [XMPP over WebSocket](http://tools.ietf.org/html/rfc7395)\r\n* [XMPP over BOSH](http://xmpp.org/extensions/xep-0206.html)\r\n\r\n## Dependencies\r\n\r\n* [node-xmpp-core](http://github.com/node-xmpp/node-xmpp-core)\r\n\r\nOptional\r\n\r\n* [node-stringprep](http://github.com/node-xmpp/node-stringprep): for [icu](http://icu-project.org/)-based string normalization.\r\n\r\n### Building XML Elements\r\n\r\nStrophe.js' XML Builder is very convenient for producing XMPP\r\nstanzas. ltx includes it in a much more primitive way: the\r\n`c()`, `cnode()` and `t()` methods can be called on any *Element*\r\nobject, returning the new child element.\r\n\r\nThis can be confusing: in the end, you will hold the last-added child\r\nuntil you use `up()`, a getter for the parent. `Connection.send()`\r\nfirst invokes `tree()` to retrieve the uppermost parent, the XMPP\r\nstanza, before sending it out the wire.\r\n\r\n# Sponsor\r\n\r\n - S2S implementation has been sponsored by [superfeedr](http://superfeedr.com/)\r\n\r\n# Licence\r\n\r\nMIT\r\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/node-xmpp/node-xmpp-server",
  "_id": "node-xmpp-server@1.0.0-alpha12",
  "_shasum": "b94ccc017157b43c66abd621083b89e6f66ae5d8",
  "_from": "git://github.com/node-xmpp/node-xmpp-server.git",
  "_resolved": "git://github.com/node-xmpp/node-xmpp-server.git#d2741a0658725b2ee824868750782b003783e579",
  "_fromGithub": true
}

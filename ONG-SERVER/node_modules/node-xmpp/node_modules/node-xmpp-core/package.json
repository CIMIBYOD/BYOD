{
  "name": "node-xmpp-core",
  "version": "1.0.0-alpha14",
  "description": "Core files in the node-xmpp project",
  "main": "index.js",
  "scripts": {
    "test": "grunt test"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:node-xmpp/node-xmpp-core.git"
  },
  "keywords": [
    "xmpp"
  ],
  "author": {
    "name": "Lloyd Watkin",
    "email": "lloyd@evilprofessor.co.uk"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/node-xmpp/node-xmpp-core/issues"
  },
  "dependencies": {
    "node-stringprep": "^0.7.0",
    "reconnect-core": "https://github.com/dodo/reconnect-core/tarball/merged",
    "tls-connect": "^0.2.2",
    "ltx": "^0.9.0",
    "debug": "^2.1.1"
  },
  "devDependencies": {
    "coveralls": "^2.11.2",
    "grunt": "^0.4.5",
    "grunt-contrib-jshint": "^0.11.0",
    "grunt-mocha-cli": "^1.12.0",
    "grunt-mocha-istanbul": "^2.3.1",
    "istanbul": "^0.3.5",
    "mocha": "^2.1.0"
  },
  "gitHead": "e4bb484de051e76383608b41e45ea54af9c8f053",
  "readme": "# node-xmpp-core\r\n\r\nLibrary to handle all the core functionality for:\r\n\r\n* [node-xmpp-client](https://github.com/node-xmpp/node-xmpp-client)\r\n* [node-xmpp-component](https://github.com/node-xmpp/node-xmpp-component)\r\n* [node-xmpp-server](https://github.com/node-xmpp/node-xmpp-server)\r\n\r\n[![build status](https://secure.travis-ci.org/node-xmpp/node-xmpp-core.svg?branch=master)](http://travis-ci.org/node-xmpp/node-xmpp-core)\r\n[![Coverage Status](https://img.shields.io/coveralls/node-xmpp/node-xmpp-core.svg)](https://coveralls.io/r/node-xmpp/node-xmpp-core)\r\n\r\n## Installation\r\n\r\n__Note:__ We now only support nodejs versions 0.8.0 and greater.\r\n\r\nWith package manager [npm](http://npmjs.org/):\r\n\r\n    npm install node-xmpp-core\r\n\r\n### Testing\r\n\r\nInstall the dev dependencies, then...\r\n\r\n```npm test```\r\n\r\nTo run the tests and the code style checks then use:\r\n\r\n```grunt test```\r\n\r\nAlso see the tests run in [travis](http://travis-ci.org/node-xmpp/node-xmpp-core). The tests in travis run both the code and code style tests.\r\n\r\n## How to use\r\n\r\nPlease use one of `node-xmpp-client/component/server`\r\n\r\n## Objectives of *node-xmpp-core:*\r\n\r\n* Use node.js conventions, especially `EventEmitter`, ie. for write\r\n  buffer control\r\n* Fast parsing, `node-expat` was written for this library\r\n\r\n## Configurations\r\n\r\n### serialized\r\nSet this option as `true` to enable the optimization for continuous TCP streams. If your \"socket\" actually transports frames (WebSockets) and you can't have stanzas split across those, do not enable it.\r\n\r\n**type:** boolean\r\n**default:** `false`\r\n\r\n\r\n## Features\r\n\r\n* Simple JID parsing with Stringprep normalization\r\n  * Optional now, you won't need ICU for just node-xmpp\r\n  * Please be aware if you identify users by JIDs\r\n  * `npm install node-stringprep`\r\n* Uses [ltx](http://github.com/astro/ltx)\r\n  * Much easier to handle than a standard DOM\r\n  * xmlns-aware\r\n  * Easy XML builder like Strophe.js (see down)\r\n  * Non-buffering serialization\r\n  * Was split out of node-xmpp for modularization and resuability\r\n\r\n## Dependencies\r\n\r\n* [node-expat](http://github.com/node-xmpp/node-expat) (requires libexpat!)\r\n* [ltx](http://github.com/node-xmpp/ltx)\r\n\r\nOptional\r\n\r\n* [node-stringprep](http://github.com/node-xmpp/node-stringprep): for [icu](http://icu-project.org/)-based string normalization.\r\n\r\nAutomatically building the optional library can be turned off by `npm config set optional false` or by setting the environmental variable `export NPM_CONFIG_OPTIONAL=false`. On Heroku this is done through `heroku config:set NPM_CONFIG_OPTIONAL=false`, for example.\r\n\r\n### Building XML Elements\r\n\r\nStrophe.js' XML Builder is very convenient for producing XMPP\r\nstanzas. ltx includes it in a much more primitive way: the\r\n`c()`, `cnode()` and `t()` methods can be called on any *Element*\r\nobject, returning the new child element.\r\n\r\nThis can be confusing: in the end, you will hold the last-added child\r\nuntil you use `up()`, a getter for the parent. `Connection.send()`\r\nfirst invokes `tree()` to retrieve the uppermost parent, the XMPP\r\nstanza, before sending it out the wire.\r\n\r\n# Documentation\r\n\r\n(Builing up documentation slowly)\r\n\r\n## JID Manipulation\r\n\r\n...coming soon...\r\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/node-xmpp/node-xmpp-core",
  "_id": "node-xmpp-core@1.0.0-alpha14",
  "_shasum": "1645d8655cf147441671cb9d218262f12ea25e5b",
  "_from": "git://github.com/node-xmpp/node-xmpp-core.git",
  "_resolved": "git://github.com/node-xmpp/node-xmpp-core.git#e4bb484de051e76383608b41e45ea54af9c8f053",
  "_fromGithub": true
}
